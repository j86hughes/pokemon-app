{"version":3,"sources":["utils.js","components/Type/Type.js","pages/Pokedex/PokemonCard.js","components/Pokeball/Pokeball.js","pages/Pokedex/Search/Search.js","pages/Pokedex/Pokedex.js","pages/Pokemon/Heading.js","pages/Pokemon/Pagination.js","pages/Pokemon/Stats.js","pages/Pokemon/Image.js","pages/Pokemon/Info.js","pages/Pokemon/Evolution.js","pages/Pokemon/Versions.js","pages/Pokemon/Weakness.js","pages/Pokemon/Explore.js","pages/Pokemon/index.js","Nav/Nav.js","App.js","index.js"],"names":["formatName","name","includes","slice","split","formatNumber","number","getTypeArray","typesArray","map","item","type","Type","isLarge","className","PokemonCard","pokemonItem","navigate","useNavigate","pokemonImage","sprites","other","front_default","types","onClick","alt","src","id","Pokeball","P","Pokedex","Search","useState","pokemon","setPokemon","useEffect","getPokemon","a","getPokemonsList","limit","offset","pokemonList","pokemony","pokemonz","results","pokemonx","setName","foundPokemon","setFoundPokemon","pokemons","poke","filter","e","keyword","target","value","toLowerCase","onChange","length","onOutsideClick","charAt","toUpperCase","getPokemonDetails","getPokemonByName","Home","loading","setLoading","start","end","getRandomPokemon","randomPokemonArray","i","push","Math","floor","random","Promise","all","pokemonListWithDetails","getAllPokemon","loadMore","handleSelectChange","event","sortedPokemon","sort","b","Heading","Pagination","previous","prevPokemon","next","nextPokemon","prevId","nextId","StatBar","numOfBarsColored","statName","numThing","statsLabel","liMapped","Array","from","changeColor","style","backgroundColor","Stats","statsArray","stats","numsArray","nums","base_stat","round","statsMapped","stat","replace","num","index","Image","height","width","Info","weight","category","abilities","ability","replaceAll","decimalize","toFixed","canBeMale","canBeFemale","unknown","Evolution","evolutions","evoListItems","Versions","blue","red","showBlue","setShowBlue","Weakness","damageStuff1","damageStuff2","weakness1","double_damage_from","weakness2","alpha","concat","beta","Set","Explore","Pokemon","useParams","getPokemonSpeciesByName","spec","fetch","species","url","cat","json","catSpec","genera","genus","typeInfo1","typeInfoJSON1","damage_relations","typeInfo2","typeInfoJSON2","console","log","evoChainUrl","evolution_chain","evo","evoObj","evoListNames","evolves","chain","evolves_to","getGenderByName","item1","item2","undefined","pokemon_species_details","find","pokemon_species","flavor_text_entries","flavor_text","Nav","href","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ad70386.chunk.js","sourcesContent":["export const formatName = (name) => {\n  const hyphenNames = [\"porygon-z\", \"ho-oh\", \"jangmo-o\", \"hakamo-o\"];\n  if (hyphenNames.includes(name)) {\n    return name;\n  }\n  if (name === \"farfetchd\" || name === \"sirfetchd\") {\n    return name.slice(0, 8) + \"'\" + name.slice(8);\n  }\n  if (name === \"mr-mime\" || name === \"mr-rime\") {\n    return name.slice(0, 2) + \". \" + name.slice(3);\n  }\n  return name?.split('-')[0];\n};\n\nexport const formatNumber = (number) => {\n  if (number < 10) {\n    return `#00${number}`;\n  }\n  if (number < 100) {\n    return `#0${number}`;\n  }\n  return `#${number}`;\n};\n\nexport const getTypeArray = (typesArray) => {\n  const typesStringsArray = typesArray.map((item) => item.type.name)\n  return typesStringsArray\n}\n","import React from \"react\";\nimport \"./Type.css\";\n\nconst Type = ({ typesArray, isLarge }) => {\n\n  return (\n    <div className={isLarge ? \"type-container-large\" : \"type-container-small\"}>\n      {typesArray?.map((item) => {\n        return (\n          <div\n            className={\n              isLarge\n                ? `types-card-large ${item}`\n                : `types-card-small ${item}`\n            }\n            key={item}\n          >\n            {item}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Type;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./PokemonCard.css\";\nimport { formatName, formatNumber, getTypeArray } from \"../../utils\";\nimport Type from \"../../components/Type/Type\";\n\nconst PokemonCard = ({ pokemonItem }) => {\n  let navigate = useNavigate();\n  const pokemonImage =\n    pokemonItem.sprites?.other?.[\"official-artwork\"]?.front_default;\n  const name = formatName(pokemonItem.name);\n  const typesArray = getTypeArray(pokemonItem.types);\n\n  return (\n    <div\n      className=\"pokemonCardContainer\"\n      key={pokemonItem.name}\n      onClick={() => navigate(`/${pokemonItem.name}`)}\n    >\n      {pokemonImage && (\n        <img\n          className=\"pokemonImage\"\n          alt={pokemonItem.name}\n          src={pokemonImage}\n        />\n      )}\n      <div className=\"copyContainer\">\n        <div className=\"pokemonId\">{formatNumber(pokemonItem.id)}</div>\n        <div className=\"pokemonName\">{name}</div>\n        <div className=\"cardTypeContainer\">\n          <Type isLarge={false} typesArray={typesArray} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","import React from \"react\";\nimport './Pokeball.css'\n\nconst Pokeball = () => {\n    return <div className=\"pokeball-div\" />;\n}\n\nexport default Pokeball\n","import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Pokedex from \"pokedex-promise-v2\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport \"./Search.css\";\n\nconst P = new Pokedex();\n\nconst Search = () => {\n  const [pokemon, setPokemon] = useState([]);\n  let navigate = useNavigate();\n\n  useEffect(() => {\n    const getPokemon = async () => {\n      const pokemonList = await P.getPokemonsList({\n        limit: 898,\n        offset: 0,\n      });\n      return pokemonList;\n    };\n    const pokemonx = async () => {\n      const pokemony = await getPokemon();\n      const pokemonz = pokemony.results;\n      setPokemon(pokemonz);\n    };\n    pokemonx();\n  }, []);\n\n  // the value of the search field\n  const [name, setName] = useState(\"\");\n  // the search result\n  const [foundPokemon, setFoundPokemon] = useState(\"\");\n\n  const pokemons = pokemon.map((poke) => poke.name);\n\n  const filter = (e) => {\n    const keyword = e.target.value;\n\n    if (keyword !== \"\") {\n      const results = pokemons.filter((pokemon) => {\n        return pokemon.toLowerCase().includes(keyword.toLowerCase());\n        // Use the toLowerCase() method to make it case-insensitive\n      });\n      setFoundPokemon(results);\n    } else {\n      setFoundPokemon(\"\");\n      // If the text field is empty, show all users\n    }\n    setName(keyword);\n  };\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"search-input-container\">\n        <input\n          type=\"search\"\n          value={name}\n          onChange={filter}\n          className=\"search-input\"\n   \n          onClick={filter}\n        />\n\n        <button\n          className=\"button-result\"\n          onClick={() => navigate(`/${name.toLowerCase()}`)}\n        >\n          <SearchIcon></SearchIcon>\n        </button>\n      </div>\n      <div className=\"pokemon-list\">\n        {foundPokemon && foundPokemon.length > 0 ? (\n          <OutsideClickHandler\n            className=\"pokedexResultsDiv\"\n            onOutsideClick={() => {\n              setFoundPokemon(\"\");\n            }}\n          >\n            {foundPokemon?.map((poke) => (\n              <div\n                className=\"jimmy\"\n                onClick={() =>{\n                  setName(poke.charAt(0).toUpperCase() + poke.slice(1)); setFoundPokemon(\"\")\n                }\n                }\n              >\n                {\" \"}\n                <p className=\"jim\">{poke}</p>\n              </div>\n            ))}\n          </OutsideClickHandler>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\nimport Pokedex from \"pokedex-promise-v2\";\nimport PokemonCard from \"./PokemonCard\";\nimport \"./Pokedex.css\";\nimport Pokeball from \"../../components/Pokeball/Pokeball\";\nimport Search from \"./Search/Search\";\n\n \n\nconst P = new Pokedex();\n\nconst getPokemonDetails = async (pokemon) => {\n  const item = await P.getPokemonByName(pokemon.name);\n  return item;\n};\n\nconst Home = () => {\n  const [pokemon, setPokemon] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [start, end] = useState(12);\n\n  const totalPokemon = 898;\n\n  const getRandomPokemon = async () => {\n    setLoading(true);\n    const pokemonList = await P.getPokemonsList({\n      limit: totalPokemon,\n      offset: 0,\n    });\n\n    const randomPokemonArray = [];\n    for (let i = 1; i < 13; i += 1) {\n      randomPokemonArray.push(\n        pokemonList.results[Math.floor(Math.random() * totalPokemon)]\n      );\n    }\n\n    const pokemonListWithDetails = await Promise.all(\n      randomPokemonArray.map(getPokemonDetails)\n    );\n\n    setPokemon(pokemonListWithDetails);\n    setLoading(false);\n  };\n\n  const getPokemon = async () => {\n    setLoading(true);\n    const pokemonList = await P.getPokemonsList({\n      limit: 12,\n      offset: 0,\n    });\n\n    if (pokemonList?.results) {\n      const pokemonListWithDetails = await Promise.all(\n        pokemonList.results?.map(getPokemonDetails)\n      );\n\n      setPokemon(pokemonListWithDetails);\n      setLoading(false);\n    }\n  };\n\n  const getAllPokemon = async () => {\n    setLoading(true);\n    const pokemonList = await P.getPokemonsList({\n      limit: totalPokemon,\n      offset: 0,\n    });\n\n    if (pokemonList?.results) {\n      const pokemonListWithDetails = await Promise.all(\n        pokemonList.results?.map(getPokemonDetails)\n      );\n      setPokemon(pokemonListWithDetails);\n      setLoading(false);\n    }\n  };\n\n\n\n  const loadMore = async () => {\n    const pokemonList = await P.getPokemonsList({\n      limit: start,\n      offset: 0,\n    });\n\n    if (pokemonList?.results) {\n      const pokemonListWithDetails = await Promise.all(\n        pokemonList.results?.map(getPokemonDetails)\n      );\n\n      setPokemon(pokemonListWithDetails);\n    }\n  };\n\n  useEffect(() => {\n    getPokemon();\n  }, []);\n\n  if (loading) {\n    return <Pokeball />;\n  }\n\n  const handleSelectChange = async (event) => {\n    let sortedPokemon = [];\n    if (event.target.value === \"numberAsc\") {\n      setLoading(true);\n      sortedPokemon = await pokemon.sort(function (a, b) {\n        if (a.id < b.id) {\n          return -1;\n        }\n        if (a.id > b.id) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    if (event.target.value === \"numberDesc\") {\n      setLoading(true);\n      sortedPokemon = await pokemon.sort(function (a, b) {\n        if (a.id < b.id) {\n          return 1;\n        }\n        if (a.id > b.id) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n    if (event.target.value === \"nameAsc\") {\n      setLoading(true);\n      sortedPokemon = await pokemon.sort(function (a, b) {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      });\n    }\n    if (event.target.value === \"nameDesc\") {\n      setLoading(true);\n      sortedPokemon = await pokemon.sort(function (a, b) {\n        if (a.name < b.name) {\n          return 1;\n        }\n        if (a.name > b.name) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n    setLoading(false);\n    setPokemon(sortedPokemon);\n  };\n\n\n\n  return (\n    <div className=\"pokedexContainer\">\n      <div className=\"titleContainer\">\n        <h1 className=\"titleH1\">Pokédex</h1>\n      </div>\n      <Search pokemonItem={pokemon} />\n      <div className=\"filtersContainer\">\n        <button\n          className=\"randomizer\"\n          type=\"button\"\n          alt=\"Surprise me!\"\n          onClick={getRandomPokemon}\n        >\n          Surprise Me!\n        </button>\n        <div className=\"selectWrapper\">\n          <select id=\"sortOrder\" onChange={handleSelectChange}>\n            <option value=\"noSort\">Sort results by...</option>\n            <option value=\"numberAsc\">Lowest Number (First)</option>\n            <option value=\"numberDesc\">Highest Number (First)</option>\n            <option value=\"nameAsc\">A-Z</option>\n            <option value=\"nameDesc\">Z-A</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"pokedexResultsContainer\">\n        {pokemon?.map((poke) => (\n          <PokemonCard pokemonItem={poke} key={poke.name} />\n        ))}\n      </div>\n      <div className=\"load-more-button-container\">\n      <button className=\"load-more-button\"\n        onClick={() => {\n          loadMore(end(start + 12));\n        }}\n        // onClick={MyList()}\n      >\n        Load More Pokémon\n      </button>\n      <button className=\"load-all-button\" onClick={() => {getAllPokemon()}}>Load All Pokémon</button>\n      </div>\n  \n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./pokemon.css\";\nimport { formatName, formatNumber } from \"../../utils\";\n\nconst Heading = ({ pokemonItem }) => {\n  const name = formatName(pokemonItem.name);\n  const number = formatNumber(pokemonItem.id)\n  return (\n    <div className=\"pokemon-name-heading\">\n      <span className=\"pokemon-name\">{name}</span>\n      <span className=\"pokemon-id\">{number}</span>\n    </div>\n  );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { formatName, formatNumber } from \"../../utils\";\nimport \"./pokemon.css\";\n\nconst Pagination = ({ pokemonItem }) => {\n  let navigate = useNavigate();\n  const previous = formatName(pokemonItem?.prevPokemon?.name);\n  const next = formatName(pokemonItem?.nextPokemon?.name);\n  const prevId = formatNumber(pokemonItem.prevPokemon.id)\n  const nextId = formatNumber(pokemonItem.nextPokemon.id)\n\n  return (\n    <section className=\" pagination section pokedex-pokemon-header\">\n      <div className=\"pokedex-pokemon-pagination\">\n        <div\n          className=\"previous\"\n          onClick={() => navigate(`/${pokemonItem.prevPokemon.name}`)}\n        >\n          <div className=\"left\">\n            <span className=\"icon icon_arrow_sm_left\" />\n            <span className=\"pokemon-number\">{prevId}</span>\n            <span className=\"pokemon-name\">{previous}</span>\n          </div>\n        </div>\n        <div\n          className=\"next\"\n          onClick={() => navigate(`/${pokemonItem.nextPokemon.name}`)}\n        >\n          <div className=\"right\">\n            <span className=\"icon icon_arrow_sm_right\" />\n            <span className=\"pokemon-name\">{next}</span>\n            <span className=\"pokemon-number\">{nextId}</span>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport \"./pokemon.css\";\n\nconst StatBar = ({ numOfBarsColored, statName }) => {\n  const numThing = numOfBarsColored;\n  const statsLabel = statName;\n  const lisArray = Array.from(new Array(15));\n  const liMapped = lisArray.map((a, i) => {\n    const changeColor = i < numThing ? \"#30a7d7\" : \"white\";\n    return <li className=\"stat-li\" style={{ backgroundColor: changeColor }} />;\n  });\n  return (\n    <div>\n      <ul className=\"bar-ul\">{liMapped}</ul>\n      {statsLabel}\n    </div>\n  );\n};\n\nconst Stats = ({ pokemonItem }) => {\n  const statsArray = pokemonItem.stats;\n  const numsArray = [];\n  for (let i = 0; i < statsArray.length; i++) {\n    const newObj = statsArray[i];\n    const nums = newObj.base_stat;\n    numsArray.push(Math.round(nums / 17));\n  }\n  const statsMapped = statsArray.map((stats) => {\n    ``;\n    const statName =\n      stats.stat.name.charAt(0) +\n      stats.stat.name.slice(1, 8).replace(\"-\", \" \") +\n      stats.stat.name.charAt(8) +\n      stats.stat.name.slice(9);\n    return <span className=\"stats-span\">{statName}</span>;\n  });\n  return (\n    <div className=\"stats-wrapper\">\n      <div className=\"stats-div\">\n        <h3 className=\"stats-header\">Stats</h3>\n        <div className=\"stats-container\">\n          <ul className=\"stat-ul-parent\">\n            {numsArray.map((num, index) => {\n              return (\n                <div className=\"stat-ul-div\">\n                  <StatBar\n                    numOfBarsColored={num}\n                    statName={statsMapped[index]}\n                  />\n                </div>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stats;\n","import React from \"react\";\nimport \"./pokemon.css\";\n\nconst Image = ({ src, name }) => {\n  return (\n    <div className=\"image-div\">\n      {src && (\n        <img\n          className=\"pokemon-image\"\n          height={400}\n          width={400}\n          alt={name}\n          src={src}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import React from \"react\";\nimport MaleIcon from '@mui/icons-material/Male';\nimport FemaleIcon from '@mui/icons-material/Female';\nimport \"./pokemon.css\";\n\nconst Info = ({ pokemonItem }) => {\n  let height = pokemonItem.height;\n  let weight = pokemonItem.weight;\n  let category = pokemonItem.category.replace(\"Pokémon\", \"\")\n\n  const abilities = pokemonItem.abilities?.map(({ ability }) => (\n    <span className=\"info-value\" id=\"info-abilities\">\n      {ability?.name.replaceAll(\"-\", \" \")}\n    </span>\n  ));\n \n\n  const decimalize = (num) => {\n    return (num / 10).toFixed(1);\n  };\n\n  return (\n    <div className=\"info-div\" height={200} width={400}>\n      <div className=\"info-ul-div1\">\n        <ul className=\"info-ul1\">\n          <li className=\"info-li\">\n            <span className=\"info-label\">Height</span>\n            <span className=\"info-value\">{decimalize(height)} m</span>\n          </li>\n          <li className=\"info-li\">\n            <span className=\"info-label\">Weight</span>\n            <span className=\"info-value\">{decimalize(weight)} kg</span>\n          </li>\n          <li className=\"info-li\">\n            <span className=\"info-label\">Gender</span>\n            {pokemonItem.canBeMale ? (\n              <span className=\"info-value\">    <MaleIcon className=\"malePokemon\"></MaleIcon>\n              </span>\n            ) : null}\n            {pokemonItem.canBeFemale ? (\n              <span className=\"info-value\">    <FemaleIcon className=\"femalePokemon\"></FemaleIcon>\n              </span>\n            ) : null}\n            {pokemonItem.unknown ? (\n              <span className=\"info-value\">Unknown</span>\n            ) : null}\n          </li>\n        </ul>\n      </div>\n      <div className=\"info-ul-div2\">\n        <ul className=\"info-ul2\">\n          <li className=\"info-li\">\n            <span className=\"info-label\">Category</span>\n            <span className=\"info-value\">{category}</span>\n          </li>\n          <li className=\"info-li\">\n            <span className=\"info-label\">Abilities</span>\n            {abilities}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { formatName, formatNumber, getTypeArray } from \"../../utils\";\nimport Type from \"../../components/Type/Type\";\nimport \"./pokemon.css\";\n\nconst Evolution = ({ pokemonItem }) => {\n  const typesArray = getTypeArray(pokemonItem.types);\n\n  let navigate = useNavigate();\n  const evolutions = pokemonItem?.evoListItems?.map((item) => (\n    <div\n      className=\"evolution-pokemon-div\"\n      onClick={() => navigate(`/${item.name}`)}\n    >\n      <img\n        className=\"evolution-img\"\n        height={200}\n        width={200}\n        src={item.sprites?.other[\"official-artwork\"]?.front_default}\n      />\n\n      <span className=\"evolution-span-1\">\n        <h3 className=\"evolution-h3-1\">{formatName(item.name)}</h3>\n        <h3 className=\"evolution-h3-2\">{formatNumber(item.id)}</h3>\n      </span>\n      <Type typesArray={typesArray} isLarge={false} />\n    </div>\n  ));\n\n  return (\n    <div className=\"evolution-wrapper\">\n      <span className=\"evolution-span-2\">\n        <h2 className=\"evolution-h2\">Evolutions</h2>\n      </span>\n      {pokemonItem.evoListItems.length <= 1 ? (\n        <p className=\"evolution-no-evolution\">This Pokémon does not evolve</p>\n      ) : null}\n      <div className=\"evolution-content-div\">{evolutions}</div>\n    </div>\n  );\n};\n\nexport default Evolution;\n","import React from \"react\";\nimport \"./pokemon.css\";\nimport { useState } from \"react\";\nimport CatchingPokemonIcon from '@mui/icons-material/CatchingPokemon';\n\nconst Versions = ({ blue, red }) => {\n  const [showBlue, setShowBlue] = useState(true);\n\n  return (\n    <div className=\"Test\">\n      <div>\n        <p className=\"versions-p\">{showBlue ? blue : red} </p>\n      </div>\n      <div>\n        Versions:{\" \"}\n        <span className=\"version-span\">\n        <CatchingPokemonIcon className=\"version-blue\" onClick={() => setShowBlue(true)}>\n          Blue\n        </CatchingPokemonIcon>\n        </span>\n        <span className=\"version-span\">\n        <CatchingPokemonIcon className=\"version-red\" onClick={() => setShowBlue(false)}>\n          Red\n        </CatchingPokemonIcon>\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Versions;\n","import React from \"react\";\nimport Type from \"../../components/Type/Type\";\nimport \"../../components/Type/Type.css\";\n\nconst Weakness = ({ damageStuff1, damageStuff2 }) => {\n  let weakness1 = damageStuff1.double_damage_from.map((item) => item.name);\n  let weakness2 = damageStuff2?.double_damage_from.map((item) => item.name);\n\n  const alpha = weakness1.concat(weakness2);\n  const beta = [...new Set(alpha)];\n\n  return (\n    <div className=\"weakness-card\">\n      <h3>Weaknesses</h3>\n      <Type typesArray={beta} />\n    </div>\n  );\n};\n\nexport default Weakness;\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./pokemon.css\";\n\nconst Explore = () => {\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"explore-div\">\n      <a className=\"explore-link\" onClick={() => navigate(`/`)}>\n        Explore More Pokémon\n      </a>\n    </div>\n  );\n};\n\nexport default Explore;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Pokedex from \"pokedex-promise-v2\";\nimport Pokeball from \"../../components/Pokeball/Pokeball\";\nimport Heading from \"./Heading\";\nimport Type from \"../../components/Type/Type\";\nimport Pagination from \"./Pagination\";\nimport Stats from \"./Stats\";\nimport Image from \"./Image\";\nimport Info from \"./Info\";\nimport Evolution from \"./Evolution\";\nimport Versions from \"./Versions\";\nimport Weakness from \"./Weakness\";\nimport { getTypeArray } from \"../../utils\";\nimport Explore from \"./Explore\"\n\nconst P = new Pokedex();\n\nconst Pokemon = () => {\n  const { name } = useParams();\n  const [pokemon, setPokemon] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const getPokemonDetails = async (name) => {\n    setLoading(true);\n    const item = await P.getPokemonByName(name);\n    item.spec = await P.getPokemonSpeciesByName(name);\n    const cat = await fetch(item.species.url);\n    const catSpec = await cat.json();\n    item.category = catSpec?.genera[7]?.genus;\n\n    const typeInfo1 = await fetch(item.types[0].type.url);\n    const typeInfoJSON1 = await typeInfo1.json();\n    item.damageStuff1 = typeInfoJSON1.damage_relations;\n    if (item.types.length > 0) {\n      try {\n        const typeInfo2 = await fetch(item.types[1].type.url);\n        const typeInfoJSON2 = await typeInfo2.json();\n        item.damageStuff2 = typeInfoJSON2.damage_relations;\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    // await way with while loop:\n    const evoChainUrl = item.spec.evolution_chain.url;\n    const evo = await fetch(evoChainUrl);\n    const evoObj = await evo.json();\n\n    const evoListNames = [];\n    let evolves = evoObj.chain;\n    while (evolves) {\n      evoListNames.push(evolves.species.name);\n      evolves = evolves.evolves_to[0];\n    }\n\n    let evoListItems = await Promise.all(\n      evoListNames.map(async (name) => {\n        const item = await P.getPokemonByName(name);\n        return item;\n      })\n    );\n\n    item.evoListItems = evoListItems;\n\n    item.prevPokemon = await P.getPokemonByName(\n      item.id === 1 ? 898 : item.id - 1\n    );\n    item.nextPokemon = await P.getPokemonByName(\n      item.id === 898 ? 1 : item.id + 1\n    );\n\n    const item1 = await P.getGenderByName(\"male\");\n    const item2 = await P.getGenderByName(\"female\");\n\n    item.canBeMale =\n      item1?.pokemon_species_details.find(\n        (pokemon) => pokemon?.pokemon_species?.name === item.name\n      ) !== undefined;\n\n    item.canBeFemale =\n      item2?.pokemon_species_details.find(\n        (pokemon) => pokemon?.pokemon_species?.name === item.name\n      ) !== undefined;\n\n    item.unknown = !item.canBeMale && !item.canBeFemale;\n\n    setPokemon(item);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (name) {\n      getPokemonDetails(name);\n    }\n  }, [name]);\n\n  if (loading) {\n    return <Pokeball />;\n  }\n\n  if (!pokemon) {\n    return null;\n  }\n\n  let blue = pokemon?.spec?.flavor_text_entries?.[0]?.flavor_text;\n  let red = pokemon?.spec?.flavor_text_entries?.[3]?.flavor_text;\n  let damageStuff1 = pokemon?.damageStuff1;\n  let damageStuff2 = pokemon?.damageStuff2;\n\n  const typesArray = getTypeArray(pokemon.types);\n\n  return (\n    <div className=\"pokemon-page\">\n      <Pagination pokemonItem={pokemon} />\n      <div className=\"pokemon-container\">\n        <Heading pokemonItem={pokemon} />\n        <div className=\"main-contents\">\n          <div className=\"row3\" pokemonItem={pokemon}>\n            <Image\n              src={pokemon.sprites?.other?.[\"official-artwork\"]?.front_default}\n            />\n            <Versions blue={blue} red={red} />\n            <Info pokemonItem={pokemon} />\n            <Type typesArray={typesArray} isLarge={true} />\n            <Weakness damageStuff1={damageStuff1} damageStuff2={damageStuff2} />\n          </div>\n          <Stats pokemonItem={pokemon} />\n        </div>\n\n        <Evolution pokemonItem={pokemon} />\n      </div>\n      <Explore />\n    </div>\n  );\n};\n\nexport default Pokemon;\n","import React from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = () => {\n\n  return (\n    <nav className=\"main\">\n      <div className=\"content-wrapper\">\n        <div className=\"nav-div\" id=\"home-tab\">\n          <a className=\"nav-link\">\n            <div>Home</div></a>\n        </div>\n        <div className=\"nav-div\" id=\"pokedex-tab\">\n          <a className=\"nav-link\">\n            <div >Pokédex</div></a>\n        </div>\n        <div className=\"nav-div\" id=\"games-tab\">\n          <a className=\"nav-link\" href=\"https://www.pokemon.com/uk/pokemon-video-games/\">\n            <div>Video Games & Apps</div></a>\n        </div>\n        <div className=\"nav-div\" id=\"trading-tab\">\n          <a className=\"nav-link\" href=\"https://www.pokemon.com/uk/pokemon-tcg/\">\n            <div>Trading Card Game</div></a>\n        </div>\n        <div className=\"nav-div\" id=\"tv-tab\">\n          <a className=\"nav-link\" href=\"https://www.pokemon.com/uk/pokemon-episodes/\">\n            <div>Pokémon TV</div></a>\n        </div>\n        <div className=\"nav-div\" id=\"play-tab\">\n          <a className=\"nav-link\" href=\"https://www.pokemon.com/uk/play-pokemon/\">\n            <div>Play! Pokémon Events</div></a>\n        </div>\n        <div className=\"nav-div\" id=\"news-tab\">\n          <a className=\"nav-link\" href=\"https://www.pokemon.com/uk/pokemon-news/\">\n            <div>News</div></a>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport Pokedex from \"./pages/Pokedex\";\nimport Pokemon from \"./pages/Pokemon\";\nimport Nav from \"./Nav/Nav\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"appContentContainer\">\n      <Nav />\n      <div className=\"appRoutesContainer\">\n        <Router>\n          <Routes>\n            <Route path=\"/\" element={<Pokedex />} />\n            <Route path=\"/:name\" element={<Pokemon />} />\n          </Routes>\n        </Router>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}